name: Android - Build Release APK

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    env:
      APP_DIR: S2PASS-Android/S2PASS-Android
      KEYSTORE_PATH: S2PASS-Android/S2PASS-Android/release.keystore
      ANDROID_PLATFORM_PKG: platforms;android-34
      ANDROID_BUILD_TOOLS_PKG: build-tools;34.0.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate required secrets
        run: |
          missing=0
          [ -z "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ] && echo "❌ ANDROID_KEYSTORE_BASE64 missing" && missing=1
          [ -z "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ] && echo "❌ ANDROID_KEYSTORE_PASSWORD missing" && missing=1
          [ -z "${{ secrets.ANDROID_KEY_ALIAS }}" ] && echo "❌ ANDROID_KEY_ALIAS missing" && missing=1
          [ -z "${{ secrets.ANDROID_KEY_PASSWORD }}" ] && echo "❌ ANDROID_KEY_PASSWORD missing" && missing=1
          [ "$missing" -eq 0 ] || exit 1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses & install platform/build-tools
        shell: bash
        run: |
          set +o pipefail
          yes | sdkmanager --licenses >/dev/null 2>&1 || true
          set -o pipefail
          sdkmanager --install "${ANDROID_PLATFORM_PKG}" "${ANDROID_BUILD_TOOLS_PKG}"
          sdkmanager --list | head -n 200 || true

      - name: Decode keystore from base64
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > "$KEYSTORE_PATH"
          ls -l "$KEYSTORE_PATH"

      - name: Write keystore.properties (CI-only)
        run: |
          cat > "$APP_DIR/app/keystore.properties" <<'EOF'
          storeFile=../release.keystore
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF

      - name: Ensure Gradle wrapper exists & is executable
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ ! -f gradlew ]; then
            echo "❌ gradlew not found in $PWD"
            ls -la
            exit 1
          fi
          chmod +x gradlew
          ./gradlew -v

      - name: Setup Gradle caching
        uses: gradle/actions/setup-gradle@v3

      - name: Build Release APK (verbose)
        working-directory: ${{ env.APP_DIR }}
        run: ./gradlew assembleRelease --stacktrace --info --warning-mode all --no-daemon

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: ${{ env.APP_DIR }}/app/build/outputs/apk/release/*.apk
